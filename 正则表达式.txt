正则表达式(Regular Expression)是一种文本模式，包括普通字符（例如，a 到 z 之间的字母）和特殊字符（称为"元字符"）。
使用单个字符来描述、匹配一系列匹配某个句法规则的字符串。
表达式繁琐又强大，正则表达式应用可以提高效率。
许多程序设计语言都支持利用正则表达式进行字符串操作。
   ^[0-9]+abc$
   ^:输入字符串的开始位置。
   [0-9]+：[0-9]匹配单个数字，+匹配一个或多个
   abc$：abc匹配字符abc,$匹配输入字符串的结束位置。
 综上：表示匹配开头为数字，结尾为abc的字符串。

正则表达式可以：
1.测试字符串内的模式
2.替换文本
3.基于模式匹配从字符串中提取子字符串

正则表达式语法：
+表示前面的字符必须至少出现一次
*表示前面的字符可以不出现，也可出现一次或多次
?表示？前面的字符最多只可以出现一次。
正则表达式是由普通字符（例如字符 a 到 z）以及特殊字符（称为"元字符"）组成的文字模式。模式描述在搜索文本时要匹配的一个或多个字符串。
正则表达式作为一个模板，将某个字符模式与所搜索的字符串进行匹配。

特殊字符：
^匹配字符起始位置
*匹配前面的子表达式零次或多次 
() 标记一个子表达式的开始或结束位置
| 指明两项之间的一个选择
? 匹配前面的字表达式零次或一次
$ 匹配输入字符串的结尾位置
+ 匹配前面的字符串一次或多次
. 匹配除换行符外的任何单字符
[ 标记一个中括号表达式的开始
{ 标记限定符表达式的开始
\转义符

限定符
用来指定正则表达式的一个给定组件必须出现多少次才能满足匹配。
* + ? {n} {n,} {n,m}
