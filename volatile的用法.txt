volatile的主要作用是使变量在各个线程中可见，确保本条指令不会因编译器的优化而省略，且要求每次直接读值。
如下所示：
    int iByte ;
    iByte = 0xaa;
    iByte = 0x55;
    iByte = 0x5a;
    iByte = 0xa5;
编译后，编译器会忽略前三条语句，只会生成一条机器码，认为iByte = 0xa5,如果使用volatile定义变量，则编译器会逐一进行编译，
产生相应机器码。

volatile使用场合：
1.并行设备的硬件寄存器
2.中断服务子程序访问的非自动变量
3.多线程应用中被几个任务共享的变量

几个延伸解释：
1.一个参数既可以是const也可以是volatile吗？
可以，只读的状态寄存器，它是volatile因为它可能被意想不到地改变。它是const因为程序不应该试图去修改它。
2.一个指针可以是volatile吗？
可以，当一个中断服务子程序修改一个指向一个buffer的指针，需要定义成volatile
