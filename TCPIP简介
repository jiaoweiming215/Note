    TCP/IP简介
    TCP/IP的参考模型将以太网分成四层：应用层、传输层、网络互联层、网络接口层。
    数据链路层通过物理网络链路提供可靠的数据传输。不同的数据链路层定义了不同的网络和协议特征，包括物理编址、

    IP协议负责把数据从一台计算机通过网络发送到另一台计算机。数据被分割成一小块一小块，然后通过IP包发送出去。由于互联网链路复杂，两台计算机
之间经常有多条线路，因此，路由器就负责决定如何把一个IP包转发出去。IP包的特点是按块发送，途径多个路由，但不保证能到达，也不保证顺序到达。
    IP地址实际上是一个32位整数（称为IPv4），以字符串表示的IP地址如192.168.0.1实际上是把32位整数按8位分组后的数字表示，目的是便于阅读。
    IPv6地址实际上是一个128位整数，它是目前使用的IPv4的升级版，以字符串表示类似于2001:0db8:85a3:0042:1000:8a2e:0370:7334。
    TCP协议则是建立在IP协议之上的。TCP协议负责在两台计算机之间建立可靠连接，保证数据包按顺序到达。TCP协议会通过握手建立连接，
然后，对每个IP包编号，确保对方按顺序收到，如果包丢掉了，就自动重发。
    许多常用的更高级的协议都是建立在TCP协议基础上的，比如用于浏览器的HTTP协议、发送邮件的SMTP协议等。
    一个TCP报文除了包含要传输的数据外，还包含源IP地址和目标IP地址，源端口和目标端口。
    端口有什么作用？在两台计算机通信时，只发IP地址是不够的，因为同一台计算机上跑着多个网络程序。一个TCP报文来了之后，到底是交给浏览器还是QQ，
就需要端口号来区分。每个网络程序都向操作系统申请唯一的端口号，这样，两个进程在两台计算机之间建立网络连接就需要各自的IP地址和各自的端口号。
一个进程也可能同时与多个计算机建立链接，因此它会申请很多端口。

    2.以太网接入方案
    根据以太网的结构模型，衍生出多种单片机网络连接方案，包括8位的51单片机和32位的ARM单片机，它们实现网络接口的方法不同，对于像ARM等高端处理器
一般都可以运行嵌入式操作系统，如linux，对于无操作系统要求的单片机网络接入一般分为两类：传统的软件TCP/IP协议栈方案；最新的硬件TCP/IP协议栈方案。
    TCP/IP协议栈是一系列网络协议的统称，不仅包括TCP协议、IP协议，还有网络层的ICMP（Internet控制报文）协议，IGMP（Internet组管理）协议，
ARP（地址解析）协议、传输层的UDP（用户数据包）协议，应用层的HTTP（超文本传输）协议，DNS（域名解析）协议、FTP（文件传送）协议、SMTP（简单邮件管理）
协议等。

    传统以太网接入方案：MCU+MAC+PHY再加入网络接口实现以太网的物理连接，通过在主控芯片中植入TCP/IP协议代码实现通信上层应用。应用这种软件TCP/IP
协议栈方式实现的成熟方案有：ENC28J60/CS8900A/DM9000,也有想STM32F107这类内部自带MAC+PHY等方案。
    由于软件协议栈操作需要MCU不断响应中断，很大程度上占用了MCU的运算资源。单线程操作时，MCU的运行速度和数据处理速度仅能满足需要，随着线程增多，
MCU工作效率直线下降，严重影响通讯质量。
    在代码量方面，即使采用轻量级的TCP/IP协议栈LWIP协议，也会为主控芯片带来超过40K的代码量。这对于单片机来说负荷过重。
    在安全方案，设备接入互联网后必须考虑网络安全问题，这种软件协议栈的方式系统一旦收到复杂的恶意攻击，单片机可能复位，这对系统就是致命打击，虽然
网络技术不断发展，各类加密技术试图让通信变的更加安全，但是还会出现各种漏洞。

    硬件协议栈方案：由MCU+硬件协议栈芯片（内含MAC+PHY）直接加网络接口，就可方便的实现单片机联网，所有的TCP/IP处理工作都是通过 硬件协议栈芯片完成。
这类方案由WIZnet首次提出，并成功推出以太网芯片：W5100/W5200/W5300/W5500。
    所谓硬件协议栈是指通过将传统的软件TCP/IO协议栈用硬件化的逻辑门电路来实现。以外网芯片的内核由传输层的TCP/UDP/ICMP/IGMP等协议、网络层的IP/ARP/
PPPOE等协议以及链路层的MAC构成，再加上物理层的PHY和外围的寄存器、内存、SPI接口组成了这一套硬件化的以太网解决方案。
    这套硬件协议栈方案替代了以往的MCU来处理这些中断请求，即MCU只需要处理面向用户的应用数据即可，传输层、网络层、链路层及物理层全部由外围WIZnet的
芯片完成。这个方案从硬件开销和软件开发两个方面简化了五层网络模型。简化产品开发方案。这样，工程师不需要面对繁琐的通信协议代码，只需要了解简单的寄存
器功能及Socket编程就能完成产品开发中的网络功能开发部分。
    优点：极大的减少了单片机的中断次数，硬件化的电路处理协议更加快速、稳定。经测试，硬件协议栈方案速度是软件协议方案的10倍左右；随着线程的增加，因为
硬件协议栈是通过独立的Socket进行通信，因而通信速度实现累加，而且单片机的工作效率仍然很高。
    代码量上：硬件协议栈方案主要完成对Socket的编程及寄存器的调用，因此只有10K左右的代码量，远小于软件协议方案。
    成本上：硬件协议栈芯片价格与MAC+PHY比起来基本差不多，而前者简单易用，节约了成本。
    安全性：硬件逻辑门电路是不可攻击的，网络病毒对其无效。
    缺点：硬件协议栈只支持4个、8个Socket，不能随便开启更多Socket



